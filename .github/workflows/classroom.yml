name: Autograding Tests
'on':
  - push
  - repository_dispatch
permissions:
  checks: write
  actions: read
  contents: read

jobs:
  run-autograding-tests:
    runs-on: ubuntu-latest
    if: github.actor != 'github-classroom[bot]'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          
      - name: Compile Main.java
        id: compile
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: HelloMEITREX - Compiles
          command: >-
            bash -lc '
            set -e;
            mkdir -p out;
            javac -d out src/main/java/Main.java'
          timeout: 1
          max-score: 5

      - name: Prints Hello MEITREX
        id: print-hello
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: HelloMEITREXTest - PrintsExactGreeting
          command: 'bash -lc "set -e; mkdir -p out; javac -encoding UTF-8 -d out src/main/java/Main.java; output=$(java -cp out Main); if [ \"$output\" = \"Hello MEITREX\" ]; then exit 0; else echo \"Expected: Hello MEITREX\"; echo \"Got: $output\"; exit 1; fi"'
          timeout: 1
          max-score: 5

      - name: Autograding Reporter
        uses: classroom-resources/autograding-grading-reporter@v1
        env:
          COMPILE_RESULTS: "${{ steps.compile.outputs.result }}"
          PRINT-HELLO_RESULTS: "${{ steps['print-hello'].outputs.result }}"
        with:
          runners: compile,print-hello
